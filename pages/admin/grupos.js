import React, { useEffect, useState } from "react";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from 'next/link'
import Table from 'react-bootstrap/Table';
import { Button, Form } from "react-bootstrap";
import GruposService from '../../servicios/grupos'

export default function Grupos(props){
  const [grupoId, setGrupoId] = useState(null)
  const [grupoNombre, setGrupoNombre] = useState(null)
  const [datos, setDatos] = useState([])
  const [showEditar, setShowEditar] = useState(false)
  const [showAgregar, setShowAgregar] = useState(false)

  const traerDatos = async () => {
    const datos = await GruposService.getAll()
    setDatos(datos.grupos)
  }

  const mostrarNuevoGrupo = () => setShowAgregar(true)
  const agregarGrupo = async (event) => {
    event.preventDefault()
    const formData = new FormData(event.currentTarget)
    const data = Object.fromEntries(formData)
    const nomgrupo = data['nomgrupo']
    setShowAgregar(false)

    await GruposService.nuevo(nomgrupo)
    await traerDatos()
  }

  const mostrarEditarGrupo = ({ id, nomgrupo }) => {
    setGrupoId(id)
    setGrupoNombre(nomgrupo)
    setShowEditar(true)
  }
  const editarGrupo = async (event) => {
    event.preventDefault()
    const formData = new FormData(event.currentTarget)
    const data = Object.fromEntries(formData)
    const nomgrupo = data['nomgrupo']
    setShowEditar(false)

    await GruposService.editar({ id: grupoId, nomgrupo })

    setGrupoId(null)
    setGrupoNombre(null)
    await traerDatos()
  }

  const eliminarGrupo = async (id) => {
    await GruposService.eliminar(id)
    await traerDatos()
  }

  useEffect(() => {
    traerDatos()
  }, [])

    return (
        <div className={styles.container}>
        <Head>
          <title>CICLO III MISIÓN TIC 2022</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h3 className={styles.title} style={{marginBottom:"40px"}}>
            Grupos
          </h3>

          <div>
            <button type="button" className="btn btn-primary" onClick={ mostrarNuevoGrupo }>
              Crear Grupo
            </button>

            { showAgregar && (
              <Form onSubmit={ agregarGrupo }>
                <Form.Group className="mb-3" controlId="nomgrupo">
                  <Form.Label>Nuevo grupo</Form.Label>
                  <Form.Control type="text" placeholder="Nuevo grupo" name="nomgrupo" required />
                </Form.Group>
                <Button variant="primary" type="submit">
                  Agregar
                </Button>
              </Form>
            )}
          </div>

          <Table striped bordered hover style={{width: "400px", marginTop:"20px"}}>
            <thead>
                <tr>
                <th scope="col">ID</th>
                <th scope="col">Número del Grupo</th>
                <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>

               { datos.map((dato, i) =>(
                <tr key={dato.nomgrupo}>
                <th scope="row">{dato.id}</th>
                <td>
                  { grupoId !== dato.id && dato.nomgrupo }
                  { (showEditar && grupoId === dato.id) && (
                    <Form onSubmit={ editarGrupo }>
                      <Form.Group className="mb-3" controlId="nomgrupo">
                        <Form.Control required type="text" name="nomgrupo" value={ grupoNombre } onChange={ (value) => setGrupoNombre(value.target.value) } />
                      </Form.Group>
                      <Button variant="primary" type="submit">
                        Guardar
                      </Button>
                    </Form>
                  )}
                </td>
                <td>
                <button type="button" className="btn btn-primary" onClick={ () => mostrarEditarGrupo(dato) }>
                Editar
                </button>
                <button type="button" className="btn btn-danger" onClick={ () => eliminarGrupo(dato.id) }>
                Eliminar
                </button>
                </td></tr>
               ))}

            </tbody>
            </Table>

            <div>
            <Button href="/admin" className="btn btn-success" style={{marginLeft: "480px"}}>
              Regresar
            </Button>

            </div>

          </main>


        </div>
)
}
